// Generated by CoffeeScript 1.6.1
(function() {
  var libs, load_script, loader, protocol,
    __slice = [].slice;

  libs = {
    angular: function() {
      return typeof angular !== "undefined" && angular !== null ? angular : '//ajax.googleapis.com/ajax/libs/angularjs/1.0.4/angular.min.js';
    },
    backbone: function() {
      return typeof Backbone !== "undefined" && Backbone !== null ? Backbone : '//cdnjs.cloudflare.com/ajax/libs/backbone.js/0.9.10/backbone-min.js';
    },
    fastclick: function() {
      return typeof FastClick !== "undefined" && FastClick !== null ? FastClick : '//cdnjs.cloudflare.com/ajax/libs/fastclick/0.6.0/fastclick.min.js';
    },
    hammer: function() {
      return typeof Hammer !== "undefined" && Hammer !== null ? Hammer : '//cdnjs.cloudflare.com/ajax/libs/hammer.js/0.6.4/hammer.js';
    },
    jquery: function() {
      return typeof jQuery !== "undefined" && jQuery !== null ? jQuery : '//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js';
    },
    jqueryui: function() {
      var _ref;
      return (_ref = typeof jQuery !== "undefined" && jQuery !== null ? jQuery.Widget : void 0) != null ? _ref : '//ajax.googleapis.com/ajax/libs/jqueryui/1.10.1/jquery-ui.min.js';
    },
    underscore: function() {
      return typeof _ !== "undefined" && _ !== null ? _ : '//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.4.4/underscore-min.js';
    },
    webfont: function() {
      return typeof WebFont !== "undefined" && WebFont !== null ? WebFont : '//ajax.googleapis.com/ajax/libs/webfont/1.1.2/webfont.js';
    },
    zepto: function() {
      return typeof Zepto !== "undefined" && Zepto !== null ? Zepto : '//cdnjs.cloudflare.com/ajax/libs/zepto/1.0/zepto.min.js';
    }
  };

  protocol = location.protocol === 'file:' ? "http:" : '';

  load_script = function(name, callback) {
    var script, url, _ref, _ref1;
    url = (_ref = (_ref1 = typeof name === "function" ? name() : void 0) != null ? _ref1 : typeof libs[name] === "function" ? libs[name]() : void 0) != null ? _ref : null;
    if (typeof url !== 'string') {
      return callback(null);
    }
    script = document.createElement('script');
    script.type = "text/javascript";
    if (loader.defer) {
      script.defer = true;
    }
    if (loader.async) {
      script.async = true;
    }
    script.onload = function(e) {
      return callback(null);
    };
    script.onerror = function(e) {
      return callback(new Error("Could not load external resource: " + name + " from " + url));
    };
    script.src = "" + protocol + url;
    script.onreadystatechange = function() {
      if (script.readyState === 'loaded' || script.readyState === 'complete') {
        script.onreadystatechange = null;
        return callback(null);
      }
    };
    document.getElementsByTagName('HTML')[0].appendChild(script);
    return script;
  };

  loader = function() {
    var callback, libs, load_handler, nextLib;
    libs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    callback = typeof libs.slice(-1)[0] === 'function' ? libs.pop() : function(err) {
      if (err != null) {
        throw err;
      }
      return typeof console !== "undefined" && console !== null ? typeof console.log === "function" ? console.log("Library loading complete.") : void 0 : void 0;
    };
    nextLib = libs.shift();
    load_handler = function(err) {
      if (err != null) {
        return callback(err);
      }
      if (libs.length === 0) {
        return callback(null);
      } else {
        nextLib = libs.shift();
        return load_script(nextLib, load_handler);
      }
    };
    load_script(nextLib, load_handler);
    return null;
  };

  loader.async = true;

  loader.defer = false;

  loader.libs = libs;

  if (typeof module !== "undefined" && module !== null) {
    module.exports = loader;
  } else {
    this.ensure = loader;
  }

}).call(this);
